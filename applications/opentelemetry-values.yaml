---
mode: daemonset

image:
  repository: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib

config:
  receivers:
    jaeger: null
    zipkin: null
    filelog:
      exclude: []
      include:
        - /var/log/pods/*/*/*.log
      include_file_name: false
      include_file_path: true
      operators:
        - id: container-parser
          max_log_size: 102400
          type: container
      retry_on_failure:
        enabled: true
      start_at: end
    prometheus:
      config:
        scrape_configs:
          - job_name: 'otel-collector'
            scrape_interval: 60s
            static_configs:
              - targets: ['0.0.0.0:8888']

  processors:
    k8sattributes:
      extract:
        metadata:
          - k8s.namespace.name
          - k8s.deployment.name
          - k8s.statefulset.name
          - k8s.daemonset.name
          - k8s.cronjob.name
          - k8s.job.name
          - k8s.node.name
          - k8s.pod.name
          - k8s.pod.start_time
      passthrough: false
      pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.ip
        - sources:
          - from: connection
    memory_limiter:
      check_interval: 5s
      limit_percentage: 80
      spike_limit_percentage: 25
    batch: {}

  exporters:
    otlphttp:
      endpoint: ${OTLP_ENDPOINT}
      auth:
        authenticator: basicauth/otlphttp

  extensions:
    health_check:
      endpoint: ${env:MY_POD_IP}:13133
    basicauth/otlphttp:
      client_auth:
        username: ${OTLP_USER}
        password: ${OTLP_TOKEN}

  service:
    extensions:
      - health_check
      - basicauth/otlphttp
    pipelines:
      traces: null
      metrics:
        receivers:
          - prometheus
        processors:
          - memory_limiter
          - k8sattributes
          - batch
        exporters:
          - otlphttp
      logs:
        receivers:
          - filelog
        processors:
          - memory_limiter
          - k8sattributes
          - batch
        exporters:
          - otlphttp

extraEnvs:
  - name: OTLP_ENDPOINT
    valueFrom:
      secretKeyRef:
        name: grafana-otlp-ingest
        key: endpoint
  - name: OTLP_USER
    valueFrom:
      secretKeyRef:
        name: grafana-otlp-ingest
        key: user
  - name: OTLP_TOKEN
    valueFrom:
      secretKeyRef:
        name: grafana-otlp-ingest
        key: token

clusterRole:
  create: true
  rules:
    # Taken from the k8sattributes preset
    - apiGroups:
        - ""
        - apps
      resources:
        - pods
        - replicasets
        - namespaces
      verbs: ["get", "watch", "list"]

ports:
  otlp:
    enabled: true
    containerPort: 4317
    hostPort: 4317
    protocol: TCP
  otlp-http:
    enabled: true
    containerPort: 4318
    protocol: TCP
  metrics:
    containerPort: 8888
    enabled: true
    servicePort: 8888
    protocol: TCP
